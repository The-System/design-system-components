# Node CircleCI 2.0 configuration file to DTA cloud 2.0

version: 2
jobs:

  # DEPLOY-STAGING JOB
  # installing dependencies, building assets and deploying to staging
  build-and-test-uikit:
    docker:
      - image: circleci/node:8.11.4                       # NodeLTS as of 09/2018
    steps:
      - checkout                                          # get the files from the repo (why would you ever not want the files????)
      - restore_cache:
          name: Restore package cache
          keys:
            - m5-packages-{{ checksum ".circleci/PACKAGE_LOCK_CHECKSUMS" }}
      - run: 
          name: Install dependencies
          command: npm install                            # duh
      - run: 
          name: Bootstrap the packages
          command: npm run bootstrap                      # installing all dependencies of all packages
      - save_cache:
          name: Save package cache                        # Circle don't support path globbing as of 09/18
          key: m5-packages-{{ checksum ".circleci/PACKAGE_LOCK_CHECKSUMS" }}
          paths:
            - node_modules/
            - packages/keyword-list/node_modules
            - packages/core/node_modules/
            - packages/main-nav/node_modules/
            - packages/body/node_modules/
            - packages/inpage-nav/node_modules/
            - packages/tags/node_modules/
            - packages/direction-links/node_modules/
            - packages/text-inputs/node_modules/
            - packages/side-nav/node_modules/
            - packages/breadcrumbs/node_modules/
            - packages/animate/node_modules/
            - packages/buttons/node_modules/
            - packages/header/node_modules/
            - packages/footer/node_modules/
            - packages/link-list/node_modules/
            - packages/progress-indicator/node_modules/
            - packages/grid-12/node_modules/
            - packages/skip-link/node_modules/
            - packages/page-alerts/node_modules/
            - packages/callout/node_modules/
            - packages/cta-link/node_modules/
            - packages/accordion/node_modules/
            - packages/headings/node_modules/
            - packages/select/node_modules/
            - packages/control-input/node_modules/
            - packages/responsive-media/node_modules/
      - run: 
          name: Build all packages
          command: npm run build                          # installing all dependencies of all packages
      - run: 
          name: Run all tests
          command: npm test
      - persist_to_workspace:
          root: ~/project # /home/circleci/project
          paths:
            - packages/*/tests/
            - deploy/
            - index.html

  deploy-staging:
    docker:
      - image: govau/cf-cli
    steps:
      - attach_workspace:
          at: ~/project # /home/root/project
      - run:
          name: Deploying to y.cld.gov.au
          command: |
            cf login -a api.system.y.cld.gov.au -o $CF_ORG_STAGING -s $CF_SPACE_STAGING -u $CF_USER_STAGING -p $CF_PASSWORD_STAGING
            cf zero-downtime-push uikit -f deploy/manifest-staging.yml

  deploy-testing:
    docker:
      - image: govau/cf-cli
    steps:
      - attach_workspace:
          at: ~/project # /home/root/project
      - run:
          name: Deploying to y.cld.gov.au
          command: |
            cf login -a api.system.y.cld.gov.au -o $CF_ORG_STAGING -s $CF_SPACE_STAGING -u $CF_USER_STAGING -p $CF_PASSWORD_STAGING
            cf zero-downtime-push uikit-$CIRCLE_BRANCH -f deploy/manifest-testing.yml
            
  deploy-prod:
    docker:
      - image: govau/cf-cli
    steps:
      - attach_workspace:
          at: ~/project # /home/root/project
      - run:
          name: Deploying to b.cld.gov.au
          command: |
            cf login -a api.system.b.cld.gov.au -o $CF_ORG_PROD -s $CF_SPACE_PROD -u $CF_USER_PROD -p $CF_PASSWORD_PROD
            cf zero-downtime-push uikit -f deploy/manifest-production.yml

# OUR WORKFLOW
# this is where we orchestrate our jobs
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-and-test-uikit
      - deploy-staging:       # run deploy staging
          filters:
            branches:
              only: develop   # and only on the `develop` branch
          requires:
            - build-and-test-uikit
      -  deploy-testing:      # run test branches
          filters:
            branches:
              only: /.*-test/ # and only on the branches that end with `-test`
          requires:
            - build-and-test-uikit
      - deploy-prod:          # run deploy production
          filters:
            branches:
              only: master    # and only on the `master` branch
          requires:
            - build-and-test-uikit